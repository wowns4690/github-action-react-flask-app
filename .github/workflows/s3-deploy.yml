name: Deploy Frontend to S3

on:
  pull_request:
    branches:
      - master  # main 브랜치에 푸시할 때 트리거

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Cache node modules
        uses: actions/cache@v4
        id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
        with:
          path: frontend/node_modules  # 캐싱할 폴더 경로
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}  # 캐시 키 설정
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '16'  # Node.js 버전

      - name: Install dependencies
        run: |
            cd frontend
            npm install
            npm install axios

      - name: Build project
        run: |
            cd frontend
            npm run build

      - name: Deploy to S3
        run: |
          cd frontend/build  # build 폴더로 이동
          aws s3 sync . s3://simple-react-web --delete
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: 'ap-northeast-2'  # 배포할 AWS 리전
          AWS_S3_BUCKET: 'simple-react-web'  # S3 버킷 이름을 명시적으로 설정
